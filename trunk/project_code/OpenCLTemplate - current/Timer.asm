; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Ezio\Desktop\FYP\project_code\OpenCLTemplate - current\Timer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?GetTimeMs64@@YA_JXZ				; GetTimeMs64
EXTRN	__imp__GetSystemTimeAsFileTime@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__alldiv:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\ezio\desktop\fyp\project_code\opencltemplate - current\timer.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
_TEXT	SEGMENT
_ret$ = -44						; size = 8
_li$ = -28						; size = 8
_ft$ = -12						; size = 8
?GetTimeMs64@@YA_JXZ PROC				; GetTimeMs64
; Line 4
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 26
	mov	esi, esp
	lea	eax, DWORD PTR _ft$[ebp]
	push	eax
	call	DWORD PTR __imp__GetSystemTimeAsFileTime@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 27
	mov	eax, DWORD PTR _ft$[ebp]
	mov	DWORD PTR _li$[ebp], eax
; Line 28
	mov	eax, DWORD PTR _ft$[ebp+4]
	mov	DWORD PTR _li$[ebp+4], eax
; Line 30
	mov	eax, DWORD PTR _li$[ebp]
	mov	DWORD PTR _ret$[ebp], eax
	mov	ecx, DWORD PTR _li$[ebp+4]
	mov	DWORD PTR _ret$[ebp+4], ecx
; Line 31
	mov	eax, DWORD PTR _ret$[ebp]
	sub	eax, -717324288				; d53e8000H
	mov	ecx, DWORD PTR _ret$[ebp+4]
	sbb	ecx, 27111902				; 019db1deH
	mov	DWORD PTR _ret$[ebp], eax
	mov	DWORD PTR _ret$[ebp+4], ecx
; Line 32
	push	0
	push	10000					; 00002710H
	mov	eax, DWORD PTR _ret$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ret$[ebp]
	push	ecx
	call	__alldiv
	mov	DWORD PTR _ret$[ebp], eax
	mov	DWORD PTR _ret$[ebp+4], edx
; Line 34
	mov	eax, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR _ret$[ebp+4]
; Line 36
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTimeMs6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@GetTimeMs6:
	DD	2
	DD	$LN5@GetTimeMs6
$LN5@GetTimeMs6:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GetTimeMs6
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN4@GetTimeMs6
$LN4@GetTimeMs6:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	0
$LN3@GetTimeMs6:
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	0
?GetTimeMs64@@YA_JXZ ENDP				; GetTimeMs64
_TEXT	ENDS
PUBLIC	?GetTimeus64@@YA_JXZ				; GetTimeus64
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	SEGMENT
_ret$ = -44						; size = 8
_li$ = -28						; size = 8
_ft$ = -12						; size = 8
?GetTimeus64@@YA_JXZ PROC				; GetTimeus64
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	mov	esi, esp
	lea	eax, DWORD PTR _ft$[ebp]
	push	eax
	call	DWORD PTR __imp__GetSystemTimeAsFileTime@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 63
	mov	eax, DWORD PTR _ft$[ebp]
	mov	DWORD PTR _li$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _ft$[ebp+4]
	mov	DWORD PTR _li$[ebp+4], eax
; Line 66
	mov	eax, DWORD PTR _li$[ebp]
	mov	DWORD PTR _ret$[ebp], eax
	mov	ecx, DWORD PTR _li$[ebp+4]
	mov	DWORD PTR _ret$[ebp+4], ecx
; Line 67
	mov	eax, DWORD PTR _ret$[ebp]
	sub	eax, -717324288				; d53e8000H
	mov	ecx, DWORD PTR _ret$[ebp+4]
	sbb	ecx, 27111902				; 019db1deH
	mov	DWORD PTR _ret$[ebp], eax
	mov	DWORD PTR _ret$[ebp+4], ecx
; Line 68
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _ret$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ret$[ebp]
	push	ecx
	call	__alldiv
	mov	DWORD PTR _ret$[ebp], eax
	mov	DWORD PTR _ret$[ebp+4], edx
; Line 70
	mov	eax, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR _ret$[ebp+4]
; Line 72
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTimeus6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetTimeus6:
	DD	2
	DD	$LN5@GetTimeus6
$LN5@GetTimeus6:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GetTimeus6
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN4@GetTimeus6
$LN4@GetTimeus6:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	0
$LN3@GetTimeus6:
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	0
?GetTimeus64@@YA_JXZ ENDP				; GetTimeus64
_TEXT	ENDS
END
